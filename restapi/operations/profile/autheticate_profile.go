// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AutheticateProfileHandlerFunc turns a function with the right signature into a autheticate profile handler
type AutheticateProfileHandlerFunc func(AutheticateProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AutheticateProfileHandlerFunc) Handle(params AutheticateProfileParams) middleware.Responder {
	return fn(params)
}

// AutheticateProfileHandler interface for that can handle valid autheticate profile params
type AutheticateProfileHandler interface {
	Handle(AutheticateProfileParams) middleware.Responder
}

// NewAutheticateProfile creates a new http.Handler for the autheticate profile operation
func NewAutheticateProfile(ctx *middleware.Context, handler AutheticateProfileHandler) *AutheticateProfile {
	return &AutheticateProfile{Context: ctx, Handler: handler}
}

/*AutheticateProfile swagger:route POST /profile/authenticate profile autheticateProfile

Autheticate a profile

used for authetication between internal systems

*/
type AutheticateProfile struct {
	Context *middleware.Context
	Handler AutheticateProfileHandler
}

func (o *AutheticateProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAutheticateProfileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
