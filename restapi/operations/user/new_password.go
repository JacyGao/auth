// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// NewPasswordHandlerFunc turns a function with the right signature into a new password handler
type NewPasswordHandlerFunc func(NewPasswordParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NewPasswordHandlerFunc) Handle(params NewPasswordParams) middleware.Responder {
	return fn(params)
}

// NewPasswordHandler interface for that can handle valid new password params
type NewPasswordHandler interface {
	Handle(NewPasswordParams) middleware.Responder
}

// NewNewPassword creates a new http.Handler for the new password operation
func NewNewPassword(ctx *middleware.Context, handler NewPasswordHandler) *NewPassword {
	return &NewPassword{Context: ctx, Handler: handler}
}

/*NewPassword swagger:route POST /user/password user newPassword

set new user password

*/
type NewPassword struct {
	Context *middleware.Context
	Handler NewPasswordHandler
}

func (o *NewPassword) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNewPasswordParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
