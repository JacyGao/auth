// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ForgetPasswordHandlerFunc turns a function with the right signature into a forget password handler
type ForgetPasswordHandlerFunc func(ForgetPasswordParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ForgetPasswordHandlerFunc) Handle(params ForgetPasswordParams) middleware.Responder {
	return fn(params)
}

// ForgetPasswordHandler interface for that can handle valid forget password params
type ForgetPasswordHandler interface {
	Handle(ForgetPasswordParams) middleware.Responder
}

// NewForgetPassword creates a new http.Handler for the forget password operation
func NewForgetPassword(ctx *middleware.Context, handler ForgetPasswordHandler) *ForgetPassword {
	return &ForgetPassword{Context: ctx, Handler: handler}
}

/*ForgetPassword swagger:route POST /user/forget user forgetPassword

start forget password process

*/
type ForgetPassword struct {
	Context *middleware.Context
	Handler ForgetPasswordHandler
}

func (o *ForgetPassword) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewForgetPasswordParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
